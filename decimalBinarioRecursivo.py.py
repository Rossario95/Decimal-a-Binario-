# -*- coding: utf-8 -*-
"""decimalBInarioRecursivo.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13YGksQVtTOtUd9dcbwwV1PEEJUIUTh9S
"""

class DecimalABinario:
    """
    Clase que convierte un número decimal a binario utilizando recursividad.
    """

    def __init__(self, numero):
        """
        Inicializa el número decimal a convertir.
        :param numero: int - Número en base 10.
        """
        self.numero = numero

    def convertir(self, n=None):
        """
        Convierte recursivamente el número decimal en binario.

        :param n: int - Subvalor usado en la recursión (opcional).
        :return: str - Representación binaria del número.
        """
        # Primera llamada: usar el valor del objeto
        if n is None:
            n = self.numero

        # Caso base
        if n == 0:
            return ''

        # Paso recursivo: dividir entre 2 y concatenar el resto
        return self.convertir(n // 2) + str(n % 2)

    def mostrar_resultado(self):
        """
        Muestra el resultado de la conversión en pantalla.
        """
        # Manejar el caso especial n = 0 (ya que devolvería cadena vacía)
        if self.numero == 0:
            binario = '0'
        else:
            binario = self.convertir()

        print("\n==============================")
        print(" Conversión Decimal → Binario ")
        print("==============================")
        print(f"Número decimal: {self.numero}")
        print(f"Equivalente binario: {binario}")
        print("==============================\n")
if __name__ == "__main__":
    print("=== Conversor Decimal a Binario (Recursividad) ===")

    try:
        numero = int(input("Ingrese un número entero positivo: "))
        if numero < 0:
            print(" Error: solo se permiten números positivos.")
        else:
            conversor = DecimalABinario(numero)
            conversor.mostrar_resultado()
    except ValueError:
        print(" Error: debe ingresar un número entero válido.")